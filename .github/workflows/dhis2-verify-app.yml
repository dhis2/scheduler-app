name: 'dhis2: verify (app)'

on: push

concurrency:
    group: ${{ github.workflow}}-${{ github.ref }}
    cancel-in-progress: true

env:
    GIT_AUTHOR_NAME: '@dhis2-bot'
    GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
    GIT_COMMITTER_NAME: '@dhis2-bot'
    GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
    D2_VERBOSE: true

jobs:
    lint:
        uses: ./.github/workflows/lint.yml

    test:
        uses: ./.github/workflows/test.yml

    e2e:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: End-to-End tests
              uses: cypress-io/github-action@v5
              with:
                  start: npx --yes @dhis2/cli-cluster up 2.41 --channel dev --db-version 2.41 --seed, yarn start:nobrowser
                  wait-on: 'http://localhost:8080/dhis-web-commons/security/login.action, http://localhost:3000'
                  wait-on-timeout: 600
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CYPRESS_LOGIN_NAME: ${{ secrets.CYPRESS_LOGIN_NAME }}
                  CYPRESS_LOGIN_PASSWORD: ${{ secrets.CYPRESS_LOGIN_PASSWORD }}
                  CYPRESS_LOGIN_SERVER: http://localhost:8080
            - run: npx --yes @dhis2/cli-cluster down 2.41

    release:
        runs-on: ubuntu-latest
        needs: [build, lint, test, e2e]
        if: "!github.event.push.repository.fork && github.actor != 'dependabot[bot]'"
        steps:
            - uses: actions/checkout@v2
              with:
                  token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}

            - uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: 'yarn'

            - uses: actions/download-artifact@v2
              with:
                  name: app-build

            # ensure that d2-app-scripts is available
            - run: yarn install --frozen-lockfile

            - uses: dhis2/action-semantic-release@master
              with:
                  publish-apphub: true
                  publish-github: true
                  github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
                  apphub-token: ${{ secrets.DHIS2_BOT_APPHUB_TOKEN }}

            - uses: dhis2/deploy-build@master
              with:
                  # uncomment following line for monorepo apps:
                  #cwd: ./packages/app
                  build-dir: build/app
                  github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
